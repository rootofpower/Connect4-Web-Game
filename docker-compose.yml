
services:
  db:
    build: ./database
    container_name: gamestudio_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      # - ./database/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      - postgres_data:/var/lib/postgresql/data

    ports:
      - "5433:5432"
      

    networks:
      - gamestudio_network
    

  backend:
    build: ./backend
    container_name: gamestudio_backend
    restart: unless-stopped
    depends_on:
      - db
    environment:
      POSTGRES_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}    
    ports:
      - "8080:8080"

    networks:
      - gamestudio_network

  frontend:
    build: ./frontend
    container_name: gamestudio_frontend
    restart: unless-stopped
    depends_on:
      - backend
    
    environment:
      - VITE_API_URL=${VITE_API_URL}

    networks:
      - gamestudio_network

  nginx:
    image: nginx:latest
    container_name: gamestudio_nginx
    restart: unless-stopped
    depends_on:
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot_certs:/etc/letsencrypt
      - certbot_acme_challenge_webroot:/var/www/certbot
    networks:
      - gamestudio_network

  certbot:
    image: certbot/certbot:latest
    container_name: gamestudio_certbot
    volumes:
      - certbot_certs:/etc/letsencrypt 
      - certbot_acme_challenge_webroot:/var/www/certbot


networks:
  gamestudio_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  certbot_certs: 
    driver: local
  certbot_acme_challenge_webroot: 
    driver: local


